<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zee.dao.unity.pi.IPiProductRecommendUntDal" >

  <resultMap id="BaseResultMap" type="com.zee.ent.extend.pi.PiProductRecommend" >
              <id column="id" property="id" jdbcType="VARCHAR" />
              <result column="type_code" property="typeCode" jdbcType="TINYINT" />
              <result column="type_text" property="typeText" jdbcType="VARCHAR" />
              <result column="name" property="name" jdbcType="VARCHAR" />
              <result column="brand" property="brand" jdbcType="VARCHAR" />
              <result column="weight" property="weight" jdbcType="NUMERIC" />
              <result column="selling_price" property="sellingPrice" jdbcType="NUMERIC" />
              <result column="per_price_unit" property="perPriceUnit" jdbcType="NUMERIC" />
              <result column="mall_interlinkage" property="mallInterlinkage" jdbcType="VARCHAR" />
              <result column="release_time" property="releaseTime" jdbcType="TIMESTAMP" />
              <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
              <result column="is_recommend" property="isRecommend" jdbcType="TINYINT" />
              <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
        id,type_code,type_text,name,brand,weight,selling_price,per_price_unit,mall_interlinkage,release_time,add_time,is_recommend,remark
  </sql>
  
  <insert id="add" parameterType="com.zee.ent.extend.pi.PiProductRecommend" >
    insert into pi_product_recommend
    <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              id,
          </if>
      
          <if test="typeCode != null " >
              type_code,
          </if>
          <if test="typeText != null and typeText != '' " >
              type_text,
          </if>
      
          <if test="name != null and name != '' " >
              name,
          </if>
      
          <if test="brand != null and brand != '' " >
              brand,
          </if>
      
          <if test="weight != null " >
              weight,
          </if>
          <if test="sellingPrice != null " >
              selling_price,
          </if>
          <if test="perPriceUnit != null " >
              per_price_unit,
          </if>
          <if test="mallInterlinkage != null and mallInterlinkage != '' " >
              mall_interlinkage,
          </if>
      
          <if test="releaseTime != null " >
              release_time,
          </if>
          <if test="addTime != null " >
              add_time,
          </if>
          <if test="isRecommend != null " >
              is_recommend,
          </if>
          <if test="remark != null and remark != '' " >
              remark,
          </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              #{id,jdbcType=VARCHAR},
          </if>
          <if test="typeCode != null " >
              #{typeCode,jdbcType=TINYINT},
          </if>
          <if test="typeText != null and typeText != '' " >
              #{typeText,jdbcType=VARCHAR},
          </if>
          <if test="name != null and name != '' " >
              #{name,jdbcType=VARCHAR},
          </if>
          <if test="brand != null and brand != '' " >
              #{brand,jdbcType=VARCHAR},
          </if>
          <if test="weight != null " >
              #{weight,jdbcType=NUMERIC},
          </if>
          <if test="sellingPrice != null " >
              #{sellingPrice,jdbcType=NUMERIC},
          </if>
          <if test="perPriceUnit != null " >
              #{perPriceUnit,jdbcType=NUMERIC},
          </if>
          <if test="mallInterlinkage != null and mallInterlinkage != '' " >
              #{mallInterlinkage,jdbcType=VARCHAR},
          </if>
          <if test="releaseTime != null " >
              #{releaseTime,jdbcType=TIMESTAMP},
          </if>
          <if test="addTime != null " >
              #{addTime,jdbcType=TIMESTAMP},
          </if>
          <if test="isRecommend != null " >
              #{isRecommend,jdbcType=TINYINT},
          </if>
          <if test="remark != null and remark != '' " >
              #{remark,jdbcType=VARCHAR},
          </if>
    </trim>
  </insert>
  
  <insert id="addList" parameterType="list">
    	insert into pi_product_recommend
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="piProductRecommend" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{piProductRecommend.id,jdbcType=VARCHAR},
          #{piProductRecommend.typeCode,jdbcType=TINYINT},
          #{piProductRecommend.typeText,jdbcType=VARCHAR},
          #{piProductRecommend.name,jdbcType=VARCHAR},
          #{piProductRecommend.brand,jdbcType=VARCHAR},
          #{piProductRecommend.weight,jdbcType=NUMERIC},
          #{piProductRecommend.sellingPrice,jdbcType=NUMERIC},
          #{piProductRecommend.perPriceUnit,jdbcType=NUMERIC},
          #{piProductRecommend.mallInterlinkage,jdbcType=VARCHAR},
          #{piProductRecommend.releaseTime,jdbcType=TIMESTAMP},
          #{piProductRecommend.addTime,jdbcType=TIMESTAMP},
          #{piProductRecommend.isRecommend,jdbcType=TINYINT},
          #{piProductRecommend.remark,jdbcType=VARCHAR},

        </trim>
    	</foreach>
    </insert>


  <insert id="addListWithDffOrAdd" parameterType="list">
    	insert into pi_product_recommend
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="piProductRecommend" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{piProductRecommend.id,jdbcType=VARCHAR},
          #{piProductRecommend.typeCode,jdbcType=TINYINT},
          #{piProductRecommend.typeText,jdbcType=VARCHAR},
          #{piProductRecommend.name,jdbcType=VARCHAR},
          #{piProductRecommend.brand,jdbcType=VARCHAR},
          #{piProductRecommend.weight,jdbcType=NUMERIC},
          #{piProductRecommend.sellingPrice,jdbcType=NUMERIC},
          #{piProductRecommend.perPriceUnit,jdbcType=NUMERIC},
          #{piProductRecommend.mallInterlinkage,jdbcType=VARCHAR},
          #{piProductRecommend.releaseTime,jdbcType=TIMESTAMP},
          #{piProductRecommend.addTime,jdbcType=TIMESTAMP},
          #{piProductRecommend.isRecommend,jdbcType=TINYINT},
          #{piProductRecommend.remark,jdbcType=VARCHAR},

        </trim>
    	</foreach>
        ON DUPLICATE KEY UPDATE
id=values(id),
type_code=values(type_code),
type_text=values(type_text),
name=values(name),
brand=values(brand),
weight=values(weight),
selling_price=values(selling_price),
per_price_unit=values(per_price_unit),
mall_interlinkage=values(mall_interlinkage),
release_time=values(release_time),
add_time=values(add_time),
is_recommend=values(is_recommend),
remark=values(remark)
        
    </insert>


    <delete id="delete" parameterType="java.lang.String" >
        delete from pi_product_recommend
        where  id = #{id,jdbcType=VARCHAR}
    </delete>

        

	<delete id="deleteByIdList" parameterType="list">
		delete from pi_product_recommend
		where id  in
		<foreach collection="list" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
	</delete>
  
  
  
  <update id="update" parameterType="com.zee.ent.extend.pi.PiProductRecommend" >
    update pi_product_recommend
    <set >
                  <if test="typeCode != null ">
                     type_code = #{typeCode,jdbcType=TINYINT},
                  </if>
                  <if test="typeText != null  and typeText != '' " >
                     type_text = #{typeText,jdbcType=VARCHAR},
                  </if>
                  <if test="name != null  and name != '' " >
                     name = #{name,jdbcType=VARCHAR},
                  </if>
                  <if test="brand != null  and brand != '' " >
                     brand = #{brand,jdbcType=VARCHAR},
                  </if>
                  <if test="weight != null ">
                     weight = #{weight,jdbcType=NUMERIC},
                  </if>
                  <if test="sellingPrice != null ">
                     selling_price = #{sellingPrice,jdbcType=NUMERIC},
                  </if>
                  <if test="perPriceUnit != null ">
                     per_price_unit = #{perPriceUnit,jdbcType=NUMERIC},
                  </if>
                  <if test="mallInterlinkage != null  and mallInterlinkage != '' " >
                     mall_interlinkage = #{mallInterlinkage,jdbcType=VARCHAR},
                  </if>
                  <if test="releaseTime != null ">
                     release_time = #{releaseTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="addTime != null ">
                     add_time = #{addTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="isRecommend != null ">
                     is_recommend = #{isRecommend,jdbcType=TINYINT},
                  </if>
                  <if test="remark != null  and remark != '' " >
                     remark = #{remark,jdbcType=VARCHAR},
                  </if>
   </set>
                 where  id = #{id,jdbcType=VARCHAR}
  </update>
  
<update id="updateList">
    update pi_product_recommend
    <set >
                  <if test="t.typeCode != null ">
                     type_code = #{t.typeCode,jdbcType=TINYINT},
                  </if>
                  <if test="t.typeText != null  and t.typeText != '' " >
                     type_text = #{t.typeText,jdbcType=VARCHAR},
                  </if>
                  <if test="t.name != null  and t.name != '' " >
                     name = #{t.name,jdbcType=VARCHAR},
                  </if>
                  <if test="t.brand != null  and t.brand != '' " >
                     brand = #{t.brand,jdbcType=VARCHAR},
                  </if>
                  <if test="t.weight != null ">
                     weight = #{t.weight,jdbcType=NUMERIC},
                  </if>
                  <if test="t.sellingPrice != null ">
                     selling_price = #{t.sellingPrice,jdbcType=NUMERIC},
                  </if>
                  <if test="t.perPriceUnit != null ">
                     per_price_unit = #{t.perPriceUnit,jdbcType=NUMERIC},
                  </if>
                  <if test="t.mallInterlinkage != null  and t.mallInterlinkage != '' " >
                     mall_interlinkage = #{t.mallInterlinkage,jdbcType=VARCHAR},
                  </if>
                  <if test="t.releaseTime != null ">
                     release_time = #{t.releaseTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="t.addTime != null ">
                     add_time = #{t.addTime,jdbcType=TIMESTAMP},
                  </if>
                  <if test="t.isRecommend != null ">
                     is_recommend = #{t.isRecommend,jdbcType=TINYINT},
                  </if>
                  <if test="t.remark != null  and t.remark != '' " >
                     remark = #{t.remark,jdbcType=VARCHAR},
                  </if>
   </set>
	
		where id  in
		<foreach collection="idList" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
   
  </update>
  
<update id="updateListWithDff"  parameterType="list">
    update pi_product_recommend
		<trim prefix="set" suffixOverrides=",">
         <trim prefix="type_code =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.typeCode != null " >
                     when id=#{piProductRecommend.id} then #{piProductRecommend.typeCode,jdbcType=TINYINT}
                  </if>
              </foreach>
         </trim>
         <trim prefix="type_text =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.typeText != null and piProductRecommend.typeText  != ''  and piProductRecommend.typeText  != '-1' ">
                     when id=#{piProductRecommend.id} then #{piProductRecommend.typeText,jdbcType=VARCHAR}
                  </if>
                  <if test="piProductRecommend.typeText != null  and piProductRecommend.typeText  == '-1' ">
                     when id=#{piProductRecommend.id} then null
                  </if>
                  
              </foreach>
         </trim>
         <trim prefix="name =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.name != null and piProductRecommend.name  != ''  and piProductRecommend.name  != '-1' ">
                     when id=#{piProductRecommend.id} then #{piProductRecommend.name,jdbcType=VARCHAR}
                  </if>
                  <if test="piProductRecommend.name != null  and piProductRecommend.name  == '-1' ">
                     when id=#{piProductRecommend.id} then null
                  </if>
                  
              </foreach>
         </trim>
         <trim prefix="brand =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.brand != null and piProductRecommend.brand  != ''  and piProductRecommend.brand  != '-1' ">
                     when id=#{piProductRecommend.id} then #{piProductRecommend.brand,jdbcType=VARCHAR}
                  </if>
                  <if test="piProductRecommend.brand != null  and piProductRecommend.brand  == '-1' ">
                     when id=#{piProductRecommend.id} then null
                  </if>
                  
              </foreach>
         </trim>
         <trim prefix="weight =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.weight != null " >
                     when id=#{piProductRecommend.id} then #{piProductRecommend.weight,jdbcType=NUMERIC}
                  </if>
              </foreach>
         </trim>
         <trim prefix="selling_price =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.sellingPrice != null " >
                     when id=#{piProductRecommend.id} then #{piProductRecommend.sellingPrice,jdbcType=NUMERIC}
                  </if>
              </foreach>
         </trim>
         <trim prefix="per_price_unit =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.perPriceUnit != null " >
                     when id=#{piProductRecommend.id} then #{piProductRecommend.perPriceUnit,jdbcType=NUMERIC}
                  </if>
              </foreach>
         </trim>
         <trim prefix="mall_interlinkage =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.mallInterlinkage != null and piProductRecommend.mallInterlinkage  != ''  and piProductRecommend.mallInterlinkage  != '-1' ">
                     when id=#{piProductRecommend.id} then #{piProductRecommend.mallInterlinkage,jdbcType=VARCHAR}
                  </if>
                  <if test="piProductRecommend.mallInterlinkage != null  and piProductRecommend.mallInterlinkage  == '-1' ">
                     when id=#{piProductRecommend.id} then null
                  </if>
                  
              </foreach>
         </trim>
         <trim prefix="release_time =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.releaseTime != null " >
                     when id=#{piProductRecommend.id} then #{piProductRecommend.releaseTime,jdbcType=TIMESTAMP}
                  </if>
              </foreach>
         </trim>
         <trim prefix="add_time =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.addTime != null " >
                     when id=#{piProductRecommend.id} then #{piProductRecommend.addTime,jdbcType=TIMESTAMP}
                  </if>
              </foreach>
         </trim>
         <trim prefix="is_recommend =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.isRecommend != null " >
                     when id=#{piProductRecommend.id} then #{piProductRecommend.isRecommend,jdbcType=TINYINT}
                  </if>
              </foreach>
         </trim>
         <trim prefix="remark =case" suffix="end,">
              <foreach collection="list" item="piProductRecommend" index="index">
                  <if test="piProductRecommend.remark != null and piProductRecommend.remark  != ''  and piProductRecommend.remark  != '-1' ">
                     when id=#{piProductRecommend.id} then #{piProductRecommend.remark,jdbcType=VARCHAR}
                  </if>
                  <if test="piProductRecommend.remark != null  and piProductRecommend.remark  == '-1' ">
                     when id=#{piProductRecommend.id} then null
                  </if>
                  
              </foreach>
         </trim>
    </trim>
    where id in
		<foreach collection="list" item="piProductRecommend" index="index" open="(" close=")" separator=",">
			#{piProductRecommend.id,jdbcType=VARCHAR}
		</foreach>
  </update>

  
  
  <insert id="updateListWithDffOrAdd" useGeneratedKeys="true" keyProperty="id" parameterType="list">
    replace into pi_product_recommend
        <trim prefix="(" suffix=")" suffixOverrides="," >
id,
type_code,
type_text,
name,
brand,
weight,
selling_price,
per_price_unit,
mall_interlinkage,
release_time,
add_time,
is_recommend,
remark,
    </trim>
    VALUES
    <foreach collection="list" item="piProductRecommend" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
              #{piProductRecommend.id ,jdbcType=VARCHAR},
                  
                    #{piProductRecommend.typeCode,jdbcType=TINYINT},
            
                  
                     #{piProductRecommend.typeText ,jdbcType=VARCHAR},
                  
                  
                     #{piProductRecommend.name ,jdbcType=VARCHAR},
                  
                  
                     #{piProductRecommend.brand ,jdbcType=VARCHAR},
                  
                  
                    #{piProductRecommend.weight,jdbcType=NUMERIC},
            
                  
                    #{piProductRecommend.sellingPrice,jdbcType=NUMERIC},
            
                  
                    #{piProductRecommend.perPriceUnit,jdbcType=NUMERIC},
            
                  
                     #{piProductRecommend.mallInterlinkage ,jdbcType=VARCHAR},
                  
                  
                    #{piProductRecommend.releaseTime,jdbcType=TIMESTAMP},
            
                  
                    #{piProductRecommend.addTime,jdbcType=TIMESTAMP},
            
                  
                    #{piProductRecommend.isRecommend,jdbcType=TINYINT},
            
                  
                     #{piProductRecommend.remark ,jdbcType=VARCHAR},
                  
      </trim>
    </foreach>
  </insert>


  <select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String" >
          select 
                 <include refid="Base_Column_List" />
          from pi_product_recommend
           where  id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="map" >
          select
                <include refid="Base_Column_List" />
          from pi_product_recommend where 1 = 1
        <if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id LIKE CONCAT('%',#{EntityRelated.id,jdbcType=VARCHAR},'%')
		</if>

		<if test="EntityRelated.beginAddTime != null ">
				<![CDATA[ AND  unix_timestamp(add_time)>=unix_timestamp(#{EntityRelated.beginAddTime})]]> 
		</if>
		<if test="EntityRelated.endAddTime != null ">
				<![CDATA[ AND  unix_timestamp(add_time)<unix_timestamp(#{EntityRelated.endAddTime})]]> 
		</if>
		<if test="EntityRelated.brand != null and EntityRelated.brand != '' ">
 				and  brand LIKE CONCAT('%',#{EntityRelated.brand,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
				and id = #{EntityRelated.id,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.mallInterlinkage != null and EntityRelated.mallInterlinkage != '' ">
 				and  mall_interlinkage LIKE CONCAT('%',#{EntityRelated.mallInterlinkage,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.name != null and EntityRelated.name != '' ">
 				and  name LIKE CONCAT('%',#{EntityRelated.name,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.beginReleaseTime != null ">
				<![CDATA[ AND  unix_timestamp(release_time)>=unix_timestamp(#{EntityRelated.beginReleaseTime})]]> 
		</if>
		<if test="EntityRelated.endReleaseTime != null ">
				<![CDATA[ AND  unix_timestamp(release_time)<unix_timestamp(#{EntityRelated.endReleaseTime})]]> 
		</if>
		<if test="EntityRelated.remark != null and EntityRelated.remark != '' ">
 				and  remark LIKE CONCAT('%',#{EntityRelated.remark,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.typeCode != null">
				and type_code = #{EntityRelated.typeCode,jdbcType=TINYINT} 
		</if>
		<if test="EntityRelated.typeText != null and EntityRelated.typeText != '' ">
 				and  type_text LIKE CONCAT('%',#{EntityRelated.typeText,jdbcType=VARCHAR},'%') 
		</if>


		<if test="OrderList != null and OrderList!=null">
			order by
			<foreach collection="OrderList" item="Order" index="index" separator=",">
				${Order.columnName}
				<if test="Order.isASC">
					ASC
				</if>
				<if test="!Order.isASC">
					DESC
				</if>
			</foreach>
		</if>
  </select>
  
	<select id="getListBySQL" resultType="java.util.HashMap" parameterType="String">
		<if test="value!=null and value!=''">
			${value}
		</if>
	</select>

  <cache />
</mapper>