<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zee.dao.unity.pi.IPiFileUntDal" >

  <resultMap id="BaseResultMap" type="com.zee.ent.extend.pi.PiFile" >
              <id column="id" property="id" jdbcType="VARCHAR" />
              <result column="file_path" property="filePath" jdbcType="VARCHAR" />
              <result column="file_name" property="fileName" jdbcType="VARCHAR" />
              <result column="file_isvalid" property="fileIsvalid" jdbcType="TINYINT" />
              <result column="content_id" property="contentId" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
        id,file_path,file_name,file_isvalid,content_id
  </sql>
  
  <insert id="add" parameterType="com.zee.ent.extend.pi.PiFile" >
    insert into pi_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              id,
          </if>
      
          <if test="filePath != null and filePath != '' " >
              file_path,
          </if>
      
          <if test="fileName != null and fileName != '' " >
              file_name,
          </if>
      
          <if test="fileIsvalid != null " >
              file_isvalid,
          </if>
          <if test="contentId != null and contentId != '' " >
              content_id,
          </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              #{id,jdbcType=VARCHAR},
          </if>
          <if test="filePath != null and filePath != '' " >
              #{filePath,jdbcType=VARCHAR},
          </if>
          <if test="fileName != null and fileName != '' " >
              #{fileName,jdbcType=VARCHAR},
          </if>
          <if test="fileIsvalid != null " >
              #{fileIsvalid,jdbcType=TINYINT},
          </if>
          <if test="contentId != null and contentId != '' " >
              #{contentId,jdbcType=VARCHAR},
          </if>
    </trim>
  </insert>
  
  <insert id="addList" parameterType="list">
    	insert into pi_file
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="piFile" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{piFile.id,jdbcType=VARCHAR},
          #{piFile.filePath,jdbcType=VARCHAR},
          #{piFile.fileName,jdbcType=VARCHAR},
          #{piFile.fileIsvalid,jdbcType=TINYINT},
          #{piFile.contentId,jdbcType=VARCHAR},

        </trim>
    	</foreach>
    </insert>


  <insert id="addListWithDffOrAdd" parameterType="list">
    	insert into pi_file
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="piFile" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{piFile.id,jdbcType=VARCHAR},
          #{piFile.filePath,jdbcType=VARCHAR},
          #{piFile.fileName,jdbcType=VARCHAR},
          #{piFile.fileIsvalid,jdbcType=TINYINT},
          #{piFile.contentId,jdbcType=VARCHAR},

        </trim>
    	</foreach>
        ON DUPLICATE KEY UPDATE
id=values(id),
file_path=values(file_path),
file_name=values(file_name),
file_isvalid=values(file_isvalid),
content_id=values(content_id)
        
    </insert>


    <delete id="delete" parameterType="java.lang.String" >
        delete from pi_file
        where  id = #{id,jdbcType=VARCHAR}
    </delete>

        

	<delete id="deleteByIdList" parameterType="list">
		delete from pi_file
		where id  in
		<foreach collection="list" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
	</delete>
  
  
  
  <update id="update" parameterType="com.zee.ent.extend.pi.PiFile" >
    update pi_file
    <set >
                  <if test="filePath != null  and filePath != '' " >
                     file_path = #{filePath,jdbcType=VARCHAR},
                  </if>
                  <if test="fileName != null  and fileName != '' " >
                     file_name = #{fileName,jdbcType=VARCHAR},
                  </if>
                  <if test="fileIsvalid != null ">
                     file_isvalid = #{fileIsvalid,jdbcType=TINYINT},
                  </if>
                  <if test="contentId != null  and contentId != '' " >
                     content_id = #{contentId,jdbcType=VARCHAR},
                  </if>
   </set>
                 where  id = #{id,jdbcType=VARCHAR}
  </update>
  
<update id="updateList">
    update pi_file
    <set >
                  <if test="t.filePath != null  and t.filePath != '' " >
                     file_path = #{t.filePath,jdbcType=VARCHAR},
                  </if>
                  <if test="t.fileName != null  and t.fileName != '' " >
                     file_name = #{t.fileName,jdbcType=VARCHAR},
                  </if>
                  <if test="t.fileIsvalid != null ">
                     file_isvalid = #{t.fileIsvalid,jdbcType=TINYINT},
                  </if>
                  <if test="t.contentId != null  and t.contentId != '' " >
                     content_id = #{t.contentId,jdbcType=VARCHAR},
                  </if>
   </set>
	
		where id  in
		<foreach collection="idList" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
   
  </update>
  
<update id="updateListWithDff"  parameterType="list">
    update pi_file
		<trim prefix="set" suffixOverrides=",">
         <trim prefix="file_path =case" suffix="end,">
              <foreach collection="list" item="piFile" index="index">
                  <if test="piFile.filePath != null and piFile.filePath  != ''  and piFile.filePath  != '-1' ">
                     when id=#{piFile.id} then #{piFile.filePath,jdbcType=VARCHAR}
                  </if>
                  <if test="piFile.filePath != null  and piFile.filePath  == '-1' ">
                     when id=#{piFile.id} then null
                  </if>
                  
              </foreach>
         </trim>
         <trim prefix="file_name =case" suffix="end,">
              <foreach collection="list" item="piFile" index="index">
                  <if test="piFile.fileName != null and piFile.fileName  != ''  and piFile.fileName  != '-1' ">
                     when id=#{piFile.id} then #{piFile.fileName,jdbcType=VARCHAR}
                  </if>
                  <if test="piFile.fileName != null  and piFile.fileName  == '-1' ">
                     when id=#{piFile.id} then null
                  </if>
                  
              </foreach>
         </trim>
         <trim prefix="file_isvalid =case" suffix="end,">
              <foreach collection="list" item="piFile" index="index">
                  <if test="piFile.fileIsvalid != null " >
                     when id=#{piFile.id} then #{piFile.fileIsvalid,jdbcType=TINYINT}
                  </if>
              </foreach>
         </trim>
         <trim prefix="content_id =case" suffix="end,">
              <foreach collection="list" item="piFile" index="index">
                  <if test="piFile.contentId != null and piFile.contentId  != ''  and piFile.contentId  != '-1' ">
                     when id=#{piFile.id} then #{piFile.contentId,jdbcType=VARCHAR}
                  </if>
                  <if test="piFile.contentId != null  and piFile.contentId  == '-1' ">
                     when id=#{piFile.id} then null
                  </if>
                  
              </foreach>
         </trim>
    </trim>
    where id in
		<foreach collection="list" item="piFile" index="index" open="(" close=")" separator=",">
			#{piFile.id,jdbcType=VARCHAR}
		</foreach>
  </update>

  
  
  <insert id="updateListWithDffOrAdd" useGeneratedKeys="true" keyProperty="id" parameterType="list">
    replace into pi_file
        <trim prefix="(" suffix=")" suffixOverrides="," >
id,
file_path,
file_name,
file_isvalid,
content_id,
    </trim>
    VALUES
    <foreach collection="list" item="piFile" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
              #{piFile.id ,jdbcType=VARCHAR},
                  
                     #{piFile.filePath ,jdbcType=VARCHAR},
                  
                  
                     #{piFile.fileName ,jdbcType=VARCHAR},
                  
                  
                    #{piFile.fileIsvalid,jdbcType=TINYINT},
            
                  
                     #{piFile.contentId ,jdbcType=VARCHAR},
                  
      </trim>
    </foreach>
  </insert>


  <select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String" >
          select 
                 <include refid="Base_Column_List" />
          from pi_file
           where  id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="map" >
          select
                <include refid="Base_Column_List" />
          from pi_file where 1 = 1
        <if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id LIKE CONCAT('%',#{EntityRelated.id,jdbcType=VARCHAR},'%')
		</if>

		<if test="EntityRelated.contentId != null and EntityRelated.contentId != '' ">
				and content_id = #{EntityRelated.contentId,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.fileIsvalid != null and EntityRelated.fileIsvalid != '' ">
				and file_isvalid = #{EntityRelated.fileIsvalid,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.fileName != null and EntityRelated.fileName != '' ">
 				and  file_name LIKE CONCAT('%',#{EntityRelated.fileName,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.filePath != null and EntityRelated.filePath != '' ">
 				and  file_path LIKE CONCAT('%',#{EntityRelated.filePath,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
				and id = #{EntityRelated.id,jdbcType=VARCHAR} 
		</if>


		<if test="OrderList != null and OrderList!=null">
			order by
			<foreach collection="OrderList" item="Order" index="index" separator=",">
				${Order.columnName}
				<if test="Order.isASC">
					ASC
				</if>
				<if test="!Order.isASC">
					DESC
				</if>
			</foreach>
		</if>
  </select>
  
	<select id="getListBySQL" resultType="java.util.HashMap" parameterType="String">
		<if test="value!=null and value!=''">
			${value}
		</if>
	</select>

  <cache />
</mapper>