<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zee.dao.unity.mf.IMfWeatherUntDal" >

  <resultMap id="BaseResultMap" type="com.zee.ent.extend.mf.MfWeather" >
              <id column="id" property="id" jdbcType="VARCHAR" />
              <result column="warning_num" property="warningNum" jdbcType="INTEGER" />
              <result column="weather_threshold" property="weatherThreshold" jdbcType="INTEGER" />
              <result column="date_time" property="dateTime" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
        id,warning_num,weather_threshold,date_time
  </sql>
  
  <insert id="add" parameterType="com.zee.ent.extend.mf.MfWeather" >
    insert into mf_weather
    <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              id,
          </if>
      
          <if test="warningNum != null " >
              warning_num,
          </if>
          <if test="weatherThreshold != null " >
              weather_threshold,
          </if>
          <if test="dateTime != null and dateTime != '' " >
              date_time,
          </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              #{id,jdbcType=VARCHAR},
          </if>
          <if test="warningNum != null " >
              #{warningNum,jdbcType=INTEGER},
          </if>
          <if test="weatherThreshold != null " >
              #{weatherThreshold,jdbcType=INTEGER},
          </if>
          <if test="dateTime != null and dateTime != '' " >
              #{dateTime,jdbcType=VARCHAR},
          </if>
    </trim>
  </insert>
  
  <insert id="addList" parameterType="list">
    	insert into mf_weather
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="mfWeather" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{mfWeather.id,jdbcType=VARCHAR},
          #{mfWeather.warningNum,jdbcType=INTEGER},
          #{mfWeather.weatherThreshold,jdbcType=INTEGER},
          #{mfWeather.dateTime,jdbcType=VARCHAR},

        </trim>
    	</foreach>
    </insert>


  <insert id="addListWithDffOrAdd" parameterType="list">
    	insert into mf_weather
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="mfWeather" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{mfWeather.id,jdbcType=VARCHAR},
          #{mfWeather.warningNum,jdbcType=INTEGER},
          #{mfWeather.weatherThreshold,jdbcType=INTEGER},
          #{mfWeather.dateTime,jdbcType=VARCHAR},

        </trim>
    	</foreach>
        ON DUPLICATE KEY UPDATE
id=values(id),
warning_num=values(warning_num),
weather_threshold=values(weather_threshold),
date_time=values(date_time)
        
    </insert>


    <delete id="delete" parameterType="java.lang.String" >
        delete from mf_weather
        where  id = #{id,jdbcType=VARCHAR}
    </delete>

        

	<delete id="deleteByIdList" parameterType="list">
		delete from mf_weather
		where id  in
		<foreach collection="list" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
	</delete>
  
  
  
  <update id="update" parameterType="com.zee.ent.extend.mf.MfWeather" >
    update mf_weather
    <set >
                  <if test="warningNum != null ">
                     warning_num = #{warningNum,jdbcType=INTEGER},
                  </if>
                  <if test="weatherThreshold != null ">
                     weather_threshold = #{weatherThreshold,jdbcType=INTEGER},
                  </if>
                  <if test="dateTime != null  and dateTime != '' " >
                     date_time = #{dateTime,jdbcType=VARCHAR},
                  </if>
   </set>
                 where  id = #{id,jdbcType=VARCHAR}
  </update>
  
<update id="updateList">
    update mf_weather
    <set >
                  <if test="t.warningNum != null ">
                     warning_num = #{t.warningNum,jdbcType=INTEGER},
                  </if>
                  <if test="t.weatherThreshold != null ">
                     weather_threshold = #{t.weatherThreshold,jdbcType=INTEGER},
                  </if>
                  <if test="t.dateTime != null  and t.dateTime != '' " >
                     date_time = #{t.dateTime,jdbcType=VARCHAR},
                  </if>
   </set>
	
		where id  in
		<foreach collection="idList" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
   
  </update>
  
<update id="updateListWithDff"  parameterType="list">
    update mf_weather
		<trim prefix="set" suffixOverrides=",">
         <trim prefix="warning_num =case" suffix="end,">
              <foreach collection="list" item="mfWeather" index="index">
                  <if test="mfWeather.warningNum != null " >
                     when id=#{mfWeather.id} then #{mfWeather.warningNum,jdbcType=INTEGER}
                  </if>
              </foreach>
         </trim>
         <trim prefix="weather_threshold =case" suffix="end,">
              <foreach collection="list" item="mfWeather" index="index">
                  <if test="mfWeather.weatherThreshold != null " >
                     when id=#{mfWeather.id} then #{mfWeather.weatherThreshold,jdbcType=INTEGER}
                  </if>
              </foreach>
         </trim>
         <trim prefix="date_time =case" suffix="end,">
              <foreach collection="list" item="mfWeather" index="index">
                  <if test="mfWeather.dateTime != null and mfWeather.dateTime  != ''  and mfWeather.dateTime  != '-1' ">
                     when id=#{mfWeather.id} then #{mfWeather.dateTime,jdbcType=VARCHAR}
                  </if>
                  <if test="mfWeather.dateTime != null  and mfWeather.dateTime  == '-1' ">
                     when id=#{mfWeather.id} then null
                  </if>
                  
              </foreach>
         </trim>
    </trim>
    where id in
		<foreach collection="list" item="mfWeather" index="index" open="(" close=")" separator=",">
			#{mfWeather.id,jdbcType=VARCHAR}
		</foreach>
  </update>

  
  
  <insert id="updateListWithDffOrAdd" useGeneratedKeys="true" keyProperty="id" parameterType="list">
    replace into mf_weather
        <trim prefix="(" suffix=")" suffixOverrides="," >
id,
warning_num,
weather_threshold,
date_time,
    </trim>
    VALUES
    <foreach collection="list" item="mfWeather" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
              #{mfWeather.id ,jdbcType=VARCHAR},
                  
                    #{mfWeather.warningNum,jdbcType=INTEGER},
            
                  
                    #{mfWeather.weatherThreshold,jdbcType=INTEGER},
            
                  
                     #{mfWeather.dateTime ,jdbcType=VARCHAR},
                  
      </trim>
    </foreach>
  </insert>


  <select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String" >
          select 
                 <include refid="Base_Column_List" />
          from mf_weather
           where  id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="map" >
          select
                <include refid="Base_Column_List" />
          from mf_weather where 1 = 1
        <if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id LIKE CONCAT('%',#{EntityRelated.id,jdbcType=VARCHAR},'%')
		</if>

		<if test="EntityRelated.dateTime != null and EntityRelated.dateTime != '' ">
 				and  date_time LIKE CONCAT('%',#{EntityRelated.dateTime,jdbcType=VARCHAR},'%') 
		</if>
		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
				and id = #{EntityRelated.id,jdbcType=VARCHAR} 
		</if>


		<if test="OrderList != null and OrderList!=null">
			order by
			<foreach collection="OrderList" item="Order" index="index" separator=",">
				${Order.columnName}
				<if test="Order.isASC">
					ASC
				</if>
				<if test="!Order.isASC">
					DESC
				</if>
			</foreach>
		</if>
  </select>
  
	<select id="getListBySQL" resultType="java.util.HashMap" parameterType="String">
		<if test="value!=null and value!=''">
			${value}
		</if>
	</select>

  <cache />
</mapper>