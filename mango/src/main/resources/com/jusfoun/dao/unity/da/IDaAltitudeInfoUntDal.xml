<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jusfoun.dao.unity.da.IDaAltitudeInfoUntDal" >

  <resultMap id="BaseResultMap" type="com.jusfoun.ent.extend.da.DaAltitudeInfo" >
              <id column="id" property="id" jdbcType="VARCHAR" />
              <result column="common_field_id" property="commonFieldId" jdbcType="VARCHAR" />
              <result column="name" property="name" jdbcType="VARCHAR" />
              <result column="altitude" property="altitude" jdbcType="NUMERIC" />
              <result column="average_temperature" property="averageTemperature" jdbcType="NUMERIC" />
  </resultMap>
  
  <sql id="Base_Column_List" >
        id,common_field_id,name,altitude,average_temperature
  </sql>
  
  <insert id="add" parameterType="com.jusfoun.ent.extend.da.DaAltitudeInfo" >
    insert into da_altitude_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              id,
          </if>
      
          <if test="commonFieldId != null and commonFieldId != '' " >
              common_field_id,
          </if>
      
          <if test="name != null and name != '' " >
              name,
          </if>
      
          <if test="altitude != null " >
              altitude,
          </if>
          <if test="averageTemperature != null " >
              average_temperature,
          </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              #{id,jdbcType=VARCHAR},
          </if>
          <if test="commonFieldId != null and commonFieldId != '' " >
              #{commonFieldId,jdbcType=VARCHAR},
          </if>
          <if test="name != null and name != '' " >
              #{name,jdbcType=VARCHAR},
          </if>
          <if test="altitude != null " >
              #{altitude,jdbcType=NUMERIC},
          </if>
          <if test="averageTemperature != null " >
              #{averageTemperature,jdbcType=NUMERIC},
          </if>
    </trim>
  </insert>
  
 
    <insert id="addList" parameterType="list">
    	insert into da_altitude_info
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="daAltitudeInfo" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

      
          #{daAltitudeInfo.id,jdbcType=VARCHAR},

      
          #{daAltitudeInfo.commonFieldId,jdbcType=VARCHAR},

      
          #{daAltitudeInfo.name,jdbcType=VARCHAR},

      
          #{daAltitudeInfo.altitude,jdbcType=NUMERIC},

      
          #{daAltitudeInfo.averageTemperature,jdbcType=NUMERIC},


        </trim>
    	</foreach>
    </insert>

  
  
  <delete id="delete" parameterType="java.lang.String" >
                 delete from da_altitude_info
                 where  id = #{id,jdbcType=VARCHAR}
  </delete>
  
	<delete id="deleteByIdList" parameterType="list">
		delete from da_altitude_info
		where id  in
		<foreach collection="list" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
	</delete>
  
  <update id="update" parameterType="com.jusfoun.ent.extend.da.DaAltitudeInfo" >
    update da_altitude_info
    <set >
                  <if test="commonFieldId != null  and commonFieldId != '' " >
                     common_field_id = #{commonFieldId,jdbcType=VARCHAR},
                  </if>
                  <if test="name != null  and name != '' " >
                     name = #{name,jdbcType=VARCHAR},
                  </if>
                  <if test="altitude != null ">
                     altitude = #{altitude,jdbcType=NUMERIC},
                  </if>
                  <if test="averageTemperature != null ">
                     average_temperature = #{averageTemperature,jdbcType=NUMERIC},
                  </if>
   </set>
                 where  id = #{id,jdbcType=VARCHAR}
  </update>
  
<update id="updateList">
    update da_altitude_info
    <set >
                  <if test="t.commonFieldId != null  and t.commonFieldId != '' " >
                     common_field_id = #{t.commonFieldId,jdbcType=VARCHAR},
                  </if>
                  <if test="t.name != null  and t.name != '' " >
                     name = #{t.name,jdbcType=VARCHAR},
                  </if>
                  <if test="t.altitude != null ">
                     altitude = #{t.altitude,jdbcType=NUMERIC},
                  </if>
                  <if test="t.averageTemperature != null ">
                     average_temperature = #{t.averageTemperature,jdbcType=NUMERIC},
                  </if>
   </set>
	
		where id  in
		<foreach collection="idList" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
   
  </update>
  
<update id="updateListWithDff"  parameterType="list">
    update da_altitude_info
		<trim prefix="set" suffixOverrides=",">
         <trim prefix="common_field_id =case" suffix="end,">
              <foreach collection="list" item="daAltitudeInfo" index="index">
                  <if test="daAltitudeInfo.commonFieldId != null and daAltitudeInfo.commonFieldId  != '' " >
                     when id=#{daAltitudeInfo.id} then #{daAltitudeInfo.commonFieldId,jdbcType=VARCHAR}
                  </if>
              </foreach>
         </trim>
         <trim prefix="name =case" suffix="end,">
              <foreach collection="list" item="daAltitudeInfo" index="index">
                  <if test="daAltitudeInfo.name != null and daAltitudeInfo.name  != '' " >
                     when id=#{daAltitudeInfo.id} then #{daAltitudeInfo.name,jdbcType=VARCHAR}
                  </if>
              </foreach>
         </trim>
         <trim prefix="altitude =case" suffix="end,">
              <foreach collection="list" item="daAltitudeInfo" index="index">
                  <if test="daAltitudeInfo.altitude != null " >
                     when id=#{daAltitudeInfo.id} then #{daAltitudeInfo.altitude,jdbcType=NUMERIC}
                  </if>
              </foreach>
         </trim>
         <trim prefix="average_temperature =case" suffix="end,">
              <foreach collection="list" item="daAltitudeInfo" index="index">
                  <if test="daAltitudeInfo.averageTemperature != null " >
                     when id=#{daAltitudeInfo.id} then #{daAltitudeInfo.averageTemperature,jdbcType=NUMERIC}
                  </if>
              </foreach>
         </trim>
    </trim>
    where id in
		<foreach collection="list" item="gpModule" index="index" open="(" close=")" separator=",">
			#{daAltitudeInfo.id,jdbcType=VARCHAR}
		</foreach>
  </update>

  
  
  <insert id="updateListWithDffOrAdd" useGeneratedKeys="true" keyProperty="id" parameterType="list">
    replace into da_altitude_info
        <trim prefix="(" suffix=")" suffixOverrides="," >
              id ,
          <if test="commonFieldId  != null and commonFieldId  != '' " >
              common_field_id,
          </if>
          <if test="name  != null and name  != '' " >
              name,
          </if>
          <if test="altitude  != null " >
              altitude,
          </if>
          <if test="averageTemperature  != null " >
              average_temperature,
          </if>
    </trim>
    VALUES
    <foreach collection="list" item="daAltitudeInfo" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
              #{daAltitudeInfo.id ,jdbcType=VARCHAR},
                  <if test="t.commonFieldId  != null  and t.commonFieldId != '' " >
                     #{daAltitudeInfo.commonFieldId ,jdbcType=VARCHAR},
                  </if>
                  <if test="t.name  != null  and t.name != '' " >
                     #{daAltitudeInfo.name ,jdbcType=VARCHAR},
                  </if>
                  <if test="t.altitude != null ">
                    #{daAltitudeInfo.altitude,jdbcType=NUMERIC},
                  </if>
                  <if test="t.averageTemperature != null ">
                    #{daAltitudeInfo.averageTemperature,jdbcType=NUMERIC},
                  </if>
      </trim>
    </foreach>
  </insert>


  <select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String" >
          select 
                 <include refid="Base_Column_List" />
          from da_altitude_info
           where  id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="map" >
          select
                <include refid="Base_Column_List" />
          from da_altitude_info where 1 = 1
        <if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id LIKE CONCAT('%',#{EntityRelated.id,jdbcType=VARCHAR},'%')
		</if>

		<if test="EntityRelated.commonFieldId != null and EntityRelated.commonFieldId != '' ">
				and common_field_id = #{EntityRelated.commonFieldId,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
				and id = #{EntityRelated.id,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.name != null and EntityRelated.name != '' ">
 				and  name LIKE CONCAT('%',#{EntityRelated.name,jdbcType=VARCHAR},'%') 
		</if>


		<if test="OrderList != null and OrderList!=null">
			order by
			<foreach collection="OrderList" item="Order" index="index" separator=",">
				${Order.columnName}
				<if test="Order.isASC">
					ASC
				</if>
				<if test="!Order.isASC">
					DESC
				</if>
			</foreach>
		</if>
  </select>
  
	<select id="getListBySQL" resultType="java.util.HashMap" parameterType="String">
		<if test="value!=null and value!=''">
			${value}
		</if>
	</select>

  <cache />
</mapper>