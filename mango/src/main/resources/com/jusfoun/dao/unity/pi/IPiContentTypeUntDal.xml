<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zee.dao.unity.pi.IPiContentTypeUntDal" >

  <resultMap id="BaseResultMap" type="com.zee.ent.extend.pi.PiContentType" >
              <id column="id" property="id" jdbcType="VARCHAR" />
              <result column="name" property="name" jdbcType="VARCHAR" />
              <result column="img_width" property="imgWidth" jdbcType="INTEGER" />
              <result column="img_height" property="imgHeight" jdbcType="INTEGER" />
              <result column="has_image" property="hasImage" jdbcType="TINYINT" />
              <result column="is_disabled" property="isDisabled" jdbcType="TINYINT" />
  </resultMap>
  
  <sql id="Base_Column_List" >
        id,name,img_width,img_height,has_image,is_disabled
  </sql>
  
  <insert id="add" parameterType="com.zee.ent.extend.pi.PiContentType" >
    insert into pi_content_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              id,
          </if>
      
          <if test="name != null and name != '' " >
              name,
          </if>
      
          <if test="imgWidth != null " >
              img_width,
          </if>
          <if test="imgHeight != null " >
              img_height,
          </if>
          <if test="hasImage != null " >
              has_image,
          </if>
          <if test="isDisabled != null " >
              is_disabled,
          </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
          <if test="id != null and id != '' " >
              #{id,jdbcType=VARCHAR},
          </if>
          <if test="name != null and name != '' " >
              #{name,jdbcType=VARCHAR},
          </if>
          <if test="imgWidth != null " >
              #{imgWidth,jdbcType=INTEGER},
          </if>
          <if test="imgHeight != null " >
              #{imgHeight,jdbcType=INTEGER},
          </if>
          <if test="hasImage != null " >
              #{hasImage,jdbcType=TINYINT},
          </if>
          <if test="isDisabled != null " >
              #{isDisabled,jdbcType=TINYINT},
          </if>
    </trim>
  </insert>
  
  <insert id="addList" parameterType="list">
    	insert into pi_content_type
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="piContentType" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{piContentType.id,jdbcType=VARCHAR},
          #{piContentType.name,jdbcType=VARCHAR},
          #{piContentType.imgWidth,jdbcType=INTEGER},
          #{piContentType.imgHeight,jdbcType=INTEGER},
          #{piContentType.hasImage,jdbcType=TINYINT},
          #{piContentType.isDisabled,jdbcType=TINYINT},

        </trim>
    	</foreach>
    </insert>


  <insert id="addListWithDffOrAdd" parameterType="list">
    	insert into pi_content_type
    	<trim prefix="(" suffix=")">
    		<include refid="Base_Column_List" />
    	</trim>
    	values
    	<foreach collection="list" item="piContentType" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides="," >

          #{piContentType.id,jdbcType=VARCHAR},
          #{piContentType.name,jdbcType=VARCHAR},
          #{piContentType.imgWidth,jdbcType=INTEGER},
          #{piContentType.imgHeight,jdbcType=INTEGER},
          #{piContentType.hasImage,jdbcType=TINYINT},
          #{piContentType.isDisabled,jdbcType=TINYINT},

        </trim>
    	</foreach>
        ON DUPLICATE KEY UPDATE
id=values(id),
name=values(name),
img_width=values(img_width),
img_height=values(img_height),
has_image=values(has_image),
is_disabled=values(is_disabled)
        
    </insert>


    <delete id="delete" parameterType="java.lang.String" >
        delete from pi_content_type
        where  id = #{id,jdbcType=VARCHAR}
    </delete>

        

	<delete id="deleteByIdList" parameterType="list">
		delete from pi_content_type
		where id  in
		<foreach collection="list" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
	</delete>
  
  
  
  <update id="update" parameterType="com.zee.ent.extend.pi.PiContentType" >
    update pi_content_type
    <set >
                  <if test="name != null  and name != '' " >
                     name = #{name,jdbcType=VARCHAR},
                  </if>
                  <if test="imgWidth != null ">
                     img_width = #{imgWidth,jdbcType=INTEGER},
                  </if>
                  <if test="imgHeight != null ">
                     img_height = #{imgHeight,jdbcType=INTEGER},
                  </if>
                  <if test="hasImage != null ">
                     has_image = #{hasImage,jdbcType=TINYINT},
                  </if>
                  <if test="isDisabled != null ">
                     is_disabled = #{isDisabled,jdbcType=TINYINT},
                  </if>
   </set>
                 where  id = #{id,jdbcType=VARCHAR}
  </update>
  
<update id="updateList">
    update pi_content_type
    <set >
                  <if test="t.name != null  and t.name != '' " >
                     name = #{t.name,jdbcType=VARCHAR},
                  </if>
                  <if test="t.imgWidth != null ">
                     img_width = #{t.imgWidth,jdbcType=INTEGER},
                  </if>
                  <if test="t.imgHeight != null ">
                     img_height = #{t.imgHeight,jdbcType=INTEGER},
                  </if>
                  <if test="t.hasImage != null ">
                     has_image = #{t.hasImage,jdbcType=TINYINT},
                  </if>
                  <if test="t.isDisabled != null ">
                     is_disabled = #{t.isDisabled,jdbcType=TINYINT},
                  </if>
   </set>
	
		where id  in
		<foreach collection="idList" item="id " index="index" open="(" close=")" separator=",">
			#{id }
		</foreach>
   
  </update>
  
<update id="updateListWithDff"  parameterType="list">
    update pi_content_type
		<trim prefix="set" suffixOverrides=",">
         <trim prefix="name =case" suffix="end,">
              <foreach collection="list" item="piContentType" index="index">
                  <if test="piContentType.name != null and piContentType.name  != ''  and piContentType.name  != '-1' ">
                     when id=#{piContentType.id} then #{piContentType.name,jdbcType=VARCHAR}
                  </if>
                  <if test="piContentType.name != null  and piContentType.name  == '-1' ">
                     when id=#{piContentType.id} then null
                  </if>
                  
              </foreach>
         </trim>
         <trim prefix="img_width =case" suffix="end,">
              <foreach collection="list" item="piContentType" index="index">
                  <if test="piContentType.imgWidth != null " >
                     when id=#{piContentType.id} then #{piContentType.imgWidth,jdbcType=INTEGER}
                  </if>
              </foreach>
         </trim>
         <trim prefix="img_height =case" suffix="end,">
              <foreach collection="list" item="piContentType" index="index">
                  <if test="piContentType.imgHeight != null " >
                     when id=#{piContentType.id} then #{piContentType.imgHeight,jdbcType=INTEGER}
                  </if>
              </foreach>
         </trim>
         <trim prefix="has_image =case" suffix="end,">
              <foreach collection="list" item="piContentType" index="index">
                  <if test="piContentType.hasImage != null " >
                     when id=#{piContentType.id} then #{piContentType.hasImage,jdbcType=TINYINT}
                  </if>
              </foreach>
         </trim>
         <trim prefix="is_disabled =case" suffix="end,">
              <foreach collection="list" item="piContentType" index="index">
                  <if test="piContentType.isDisabled != null " >
                     when id=#{piContentType.id} then #{piContentType.isDisabled,jdbcType=TINYINT}
                  </if>
              </foreach>
         </trim>
    </trim>
    where id in
		<foreach collection="list" item="piContentType" index="index" open="(" close=")" separator=",">
			#{piContentType.id,jdbcType=VARCHAR}
		</foreach>
  </update>

  
  
  <insert id="updateListWithDffOrAdd" useGeneratedKeys="true" keyProperty="id" parameterType="list">
    replace into pi_content_type
        <trim prefix="(" suffix=")" suffixOverrides="," >
id,
name,
img_width,
img_height,
has_image,
is_disabled,
    </trim>
    VALUES
    <foreach collection="list" item="piContentType" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
              #{piContentType.id ,jdbcType=VARCHAR},
                  
                     #{piContentType.name ,jdbcType=VARCHAR},
                  
                  
                    #{piContentType.imgWidth,jdbcType=INTEGER},
            
                  
                    #{piContentType.imgHeight,jdbcType=INTEGER},
            
                  
                    #{piContentType.hasImage,jdbcType=TINYINT},
            
                  
                    #{piContentType.isDisabled,jdbcType=TINYINT},
            
      </trim>
    </foreach>
  </insert>


  <select id="getModel" resultMap="BaseResultMap" parameterType="java.lang.String" >
          select 
                 <include refid="Base_Column_List" />
          from pi_content_type
           where  id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="map" >
          select
                <include refid="Base_Column_List" />
          from pi_content_type where 1 = 1
        <if test="EntityRelated.id != null and EntityRelated.id != '' ">
			and id LIKE CONCAT('%',#{EntityRelated.id,jdbcType=VARCHAR},'%')
		</if>

		<if test="EntityRelated.id != null and EntityRelated.id != '' ">
				and id = #{EntityRelated.id,jdbcType=VARCHAR} 
		</if>
		<if test="EntityRelated.name != null and EntityRelated.name != '' ">
 				and  name LIKE CONCAT('%',#{EntityRelated.name,jdbcType=VARCHAR},'%') 
		</if>


		<if test="OrderList != null and OrderList!=null">
			order by
			<foreach collection="OrderList" item="Order" index="index" separator=",">
				${Order.columnName}
				<if test="Order.isASC">
					ASC
				</if>
				<if test="!Order.isASC">
					DESC
				</if>
			</foreach>
		</if>
  </select>
  
	<select id="getListBySQL" resultType="java.util.HashMap" parameterType="String">
		<if test="value!=null and value!=''">
			${value}
		</if>
	</select>

  <cache />
</mapper>